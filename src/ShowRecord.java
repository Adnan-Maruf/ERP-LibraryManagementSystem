
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author User
 */
public class ShowRecord extends javax.swing.JFrame {

    /**
     * Creates new form ShowRecord
     */
    int ReVal,Copies;
    String MID,BkTl,Type;
    public ShowRecord() {
        initComponents();
        setIcon();
        viewItem();
    }
    public ShowRecord(String id) {
        MID=id;
        initComponents();
        setIcon();
        memID.setEditable(false);
        memID.setBackground(new java.awt.Color(255,255,255));
        memID.setFont(new java.awt.Font("Agency FB", 1, 18)); 
        memID.setForeground(new java.awt.Color(0,0,204));
        memID.setText(MID);
        
        viewItem();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        memID = new javax.swing.JTextField();
        BkID = new javax.swing.JTextField();

        jFormattedTextField1.setText("jFormattedTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Records");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Records");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Controls:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 1, 14), new java.awt.Color(255, 0, 0))); // NOI18N

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\Documents\\NetBeansProjects\\LibraryManagementSystem\\src\\Industry-Return-icon.png")); // NOI18N
        jButton1.setText("Return");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\Documents\\NetBeansProjects\\LibraryManagementSystem\\src\\renew-icon.png")); // NOI18N
        jButton2.setText("Renew");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\Documents\\NetBeansProjects\\LibraryManagementSystem\\src\\refresh-icon.png")); // NOI18N
        jButton3.setText("Refresh");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\Documents\\NetBeansProjects\\LibraryManagementSystem\\src\\delete-icon.png")); // NOI18N
        jButton4.setText("Close");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        memID.setForeground(new java.awt.Color(0, 0, 204));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(memID, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(200, 200, 200)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BkID, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(memID, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BkID, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        viewItem();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       String bkID;
        
             //UsrID=memID.getText();
             bkID=BkID.getText();
             
             if(bkID.equals("")){
                 JOptionPane.showMessageDialog(null, "Book Not Selected!","Warning!",JOptionPane.WARNING_MESSAGE);
             }
             else{
             java.sql.Connection con=null;
             java.sql.PreparedStatement stm=null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ShowRecord.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            con = (java.sql.Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/librarymanagementytem","root","");
            
                stm=(java.sql.PreparedStatement) con.prepareStatement("DELETE FROM `book_issued` WHERE `book_issued`.`BookID` ='"+bkID+"';");
                
        int x = stm.executeUpdate();
     
        if(x==1){
        JOptionPane.showMessageDialog(rootPane, "Book Return Successfull!!");
        Return();
          BkID.setText("");   
        
        if (stm != null) {
                stm.close();
            }
            if (con != null) {
                con.close();
            }

        }
        else
            JOptionPane.showMessageDialog(null, "Something went wrong! Please try again!","Fatal Error!",JOptionPane.ERROR_MESSAGE);
            
            }   catch (SQLException ex) {
            Logger.getLogger(ShowRecord.class.getName()).log(Level.SEVERE, null, ex);
        
        }viewItem(); 
   }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        tableclick();
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        tableclick();
        ReChk();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShowRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShowRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShowRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ShowRecord().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BkID;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField memID;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("bookcrossing logo.png")));
    }

    private void viewItem() {
        
        Connection con=null;
        PreparedStatement stm=null;
        PreparedStatement stm1=null;

        try {
                Class.forName("com.mysql.jdbc.Driver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ShowRecord.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        
        try {
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/librarymanagementytem","root","");
        
            
                stm = (PreparedStatement) con.prepareStatement("select *from book_issued where UserID='"+MID+"'");
                stm1 = (PreparedStatement) con.prepareStatement("select *from book_issued where UserID='"+MID+"'");
           
            ResultSet r = stm.executeQuery();
            ResultSet s = stm1.executeQuery();

    String bkID,bkNm,issue,renew,reAv;
                int length = 0;


                while (s.next() == true) {
                     length= length+1;
            }

                String row[][]=new String[length][4];
            String col[]={" Book ID"," Book Title"," Date OF Issue"," Date OF Renew"," Renew Available"};

                
            DefaultTableModel dm=new DefaultTableModel(row,col);
            jTable1.setModel(dm);

            int i=0;
            while (r.next() == true) {

                bkID=r.getString("BookID");
                bkNm=r.getString("BookTitle");
                issue=r.getString("IssueDate");
                renew=r.getString("RenewDate");
                reAv=r.getString("RenewAvailable");
                
                
                
                jTable1.setValueAt( bkID,i,0);
                jTable1.setValueAt( bkNm,i,1);
                jTable1.setValueAt( issue,i,2);
                jTable1.setValueAt( renew,i,3);
                jTable1.setValueAt( reAv,i,4);
                
                
                i++;
            }

            
            if (stm != null) {
                stm.close();
            }
            if (con != null) {
                con.close();
            }
            
            } catch (SQLException ex) {
            Logger.getLogger(ShowRecord.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }

    private void tableclick() {
       String bkID;
       
       int selectedRow=jTable1.getSelectedRow();
        bkID=jTable1.getValueAt(selectedRow, 0).toString();
        Connection con=null;
        PreparedStatement stm=null;
        //PreparedStatement stm1=null;
        

        try {
                Class.forName("com.mysql.jdbc.Driver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(MemberPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        
        try {
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/librarymanagementytem","root","");
            
            
                stm = (PreparedStatement) con.prepareStatement("select *from book_issued where BookID='"+bkID+"'");
            
            ResultSet r = stm.executeQuery();
           
            
            int i=0;
            if (r.next() == true) {
                
                //UID=r.getString("UserID");
                bkID=r.getString("BookID");
                ReVal=r.getInt("RenewAvailable");
                BkTl=r.getString("BookTitle");
                Type=r.getString("Catagory");
                BkID.setEditable(false);
                BkID.setText(bkID);
              
                i++;
                
            }
            copies();
            
            if (stm != null) {
                stm.close();
            }
            if (con != null) {
                con.close();
            }
            
            } catch (SQLException ex) {
            Logger.getLogger(MemberPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void ReChk() {
       String bkID;
         bkID=BkID.getText();
        
       if(bkID.equals("")){
                 JOptionPane.showMessageDialog(rootPane, "Book Not Selected!"); }
       else{
       if(ReVal==2){
           Calendar cal = new GregorianCalendar();
        //cal.add(Calendar.MONTH,1);
        
        cal.add(Calendar.DAY_OF_MONTH,4);
        cal.add(Calendar.MONTH,1);
       
        int REmonth = cal.get(Calendar.MONTH);
        //int REmonth=(month+1); 
        int REyear = cal.get(Calendar.YEAR);
        
        int REday = cal.get(Calendar.DAY_OF_MONTH);
        int ReAvil=1;
        //----------------------------------------------//      
        
        java.sql.Connection con=null;
        java.sql.PreparedStatement stm=null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MemberPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            con = (java.sql.Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/librarymanagementytem","root","");
            
                stm=(java.sql.PreparedStatement) con.prepareStatement("UPDATE `book_issued` SET `RenewDate` = '"+REday+"/"+REmonth+"/"+REyear+"',`RenewAvailable` = '"+ReAvil+"' WHERE `book_issued`.`BookTitle` = '"+BkTl+"';");
           
        int x = stm.executeUpdate();
     
        if(x==1){
        JOptionPane.showMessageDialog(rootPane, "Book Renew Successfull!!");
        
             
        
        if (stm != null) {
                stm.close();
            }
            if (con != null) {
                con.close();
            }

        }
        else
            JOptionPane.showMessageDialog(null, "Something went wrong! Please try again!","Fatal Error!",JOptionPane.ERROR_MESSAGE);
            
            }   catch (SQLException ex) {
            Logger.getLogger(MemberPanel.class.getName()).log(Level.SEVERE, null, ex);
        
        } viewItem();
   }
       
       else if(ReVal==1){
            Calendar cal = new GregorianCalendar();
        //cal.add(Calendar.MONTH,1);
        
        cal.add(Calendar.DAY_OF_MONTH,2);
        cal.add(Calendar.MONTH,1);
       
        int REmonth = cal.get(Calendar.MONTH);
        //int REmonth=(month+1); 
        int REyear = cal.get(Calendar.YEAR);
        
        int REday = cal.get(Calendar.DAY_OF_MONTH);
        int ReAvil=0;
        //----------------------------------------------//      
        
        java.sql.Connection con=null;
        java.sql.PreparedStatement stm=null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MemberPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            con = (java.sql.Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/librarymanagementytem","root","");
            
              stm=(java.sql.PreparedStatement) con.prepareStatement("UPDATE `book_issued` SET `RenewDate` = '"+REday+"/"+REmonth+"/"+REyear+"',`RenewAvailable` = '"+ReAvil+"' WHERE `book_issued`.`BookTitle` = '"+BkTl+"';");
        
                      
        int x = stm.executeUpdate();
     
        if(x==1){
        JOptionPane.showMessageDialog(rootPane, "Book Renew Successfull!!");
        
             
        
        if (stm != null) {
                stm.close();
            }
            if (con != null) {
                con.close();
            }

        }
        else
            JOptionPane.showMessageDialog(null, "Something went wrong! Please try again!","Fatal Error!",JOptionPane.ERROR_MESSAGE);
            
            }   catch (SQLException ex) {
            Logger.getLogger(MemberPanel.class.getName()).log(Level.SEVERE, null, ex);
        
        }viewItem();
       }
       else if(ReVal==0){
           JOptionPane.showMessageDialog(null, "Renew Period Finished!","Error",JOptionPane.ERROR_MESSAGE);
       }
    
       
}
    }
    private void copies(){
        String bkID;
         bkID=BkID.getText();
        
        Connection con=null;
        PreparedStatement stm=null;
        
        try {
                Class.forName("com.mysql.jdbc.Driver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(MemberPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        try{
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/librarymanagementytem","root","");
            if(Type.equals("Bangla")){
                //JOptionPane.showMessageDialog(null, "B!","Fatal Error!",JOptionPane.ERROR_MESSAGE);
                   stm = (PreparedStatement) con.prepareStatement("select *from book_bangla where BookID='"+bkID+"'");
            }
            else if(Type.equals("English")){
                //JOptionPane.showMessageDialog(null, "E!","Fatal Error!",JOptionPane.ERROR_MESSAGE);
                  stm = (PreparedStatement) con.prepareStatement("select *from book_english where BookID='"+bkID+"'");
            }
            ResultSet s = stm.executeQuery();
            int j=0;
            if(s.next()== true){
                //JOptionPane.showMessageDialog(null, "N!","Fatal Error!",JOptionPane.ERROR_MESSAGE);
                Copies=s.getInt("Copies");
                //j++;
            }

            
            if (stm != null) {
                stm.close();
            }
            if (con != null) {
                con.close();
            }
        } catch (SQLException ex) {
            Logger.getLogger(MemberPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    private void Return() {
       String bkID;
         bkID=BkID.getText();
         //Copies=0;      
             java.sql.Connection con=null;
             java.sql.PreparedStatement stm=null;
             //java.sql.PreparedStatement stm1=null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MemberPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            con = (java.sql.Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/librarymanagementytem","root","");
                
             Copies=Copies+1;
               // Integer.parseInt(Copies)-1;
               if(Type.equals("Bangla")){
               //JOptionPane.showMessageDialog(rootPane, "B!!");
                   stm=(java.sql.PreparedStatement) con.prepareStatement("UPDATE `book_bangla` SET `Copies` = '"+Copies+"' WHERE `book_bangla`.`BookID` = '"+bkID+"';");
               
               }
               else if(Type.equals("English")){
               //JOptionPane.showMessageDialog(rootPane, "E!!");
                   stm=(java.sql.PreparedStatement) con.prepareStatement("UPDATE `book_english` SET `Copies` = '"+Copies+"' WHERE `book_english`.`BookID` = '"+bkID+"';");
               
               }
               
                int y = stm.executeUpdate();
     
        if(y==1){
        //JOptionPane.showMessageDialog(rootPane, "Successfull!!");
        
             //jTextField6.setText(String.valueOf(Copies));
        
        if (stm != null) {
                stm.close();
            }
            if (con != null) {
                con.close();
            }

        }
       // else
            //JOptionPane.showMessageDialog(null, "!","Fatal Error!",JOptionPane.ERROR_MESSAGE);
            
            }     catch (SQLException ex) {
            Logger.getLogger(MemberPanel.class.getName()).log(Level.SEVERE, null, ex);
        
        }
    }
}
